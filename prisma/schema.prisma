// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  CUSTOMER
  ADMIN
}

enum OrderStatus {
  PENDING_QUOTE
  PENDING_APPROVAL
  IN_DESIGN
  IN_MANUFACTURING
  IN_TESTING
  IN_PAINTING
  COMPLETED
  REJECTED
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String    @unique
  password      String?
  role          Role      @default(CUSTOMER)
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts Account[]
  sessions Session[]
  orders   Order[]
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Order {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  orderNumber   String      @unique
  customerNotes String
  status        OrderStatus @default(PENDING_QUOTE)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  customerId    String      @db.ObjectId

  customer     User         @relation(fields: [customerId], references: [id], onDelete: Cascade)
  designFiles  DesignFile[]
  quotation    Quotation?
}

model DesignFile {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  fileName   String
  fileUrl    String
  fileType   String
  uploadedAt DateTime @default(now())
  orderId    String   @db.ObjectId

  order Order @relation(fields: [orderId], references: [id], onDelete: Cascade)
}

model Quotation {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  amount     Float
  currency   String   @default("USD")
  details    String
  isAccepted Boolean  @default(false)
  createdAt  DateTime @default(now())
  orderId    String   @unique @db.ObjectId

  order Order @relation(fields: [orderId], references: [id], onDelete: Cascade)
}
